(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{503:function(s,e,a){"use strict";a.r(e);var n=a(4),t=Object(n.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h5",{attrs:{id:"_1-css-一行文本超出"}},[s._v("1. css 一行文本超出...")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v("overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" hidden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("text-overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("ellipsis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("white-space")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nowrap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h5",{attrs:{id:"_2-多行文本超出显示"}},[s._v("2.多行文本超出显示...")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" -webkit-box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("-webkit-box-orient")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" vertical"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("-webkit-line-clamp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" hidden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h5",{attrs:{id:"_3-ios-手机容器滚动条滑动不流畅"}},[s._v("3.IOS 手机容器滚动条滑动不流畅")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v("overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("-webkit-overflow-scrolling")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" touch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h5",{attrs:{id:"_4-修改滚动条样式"}},[s._v("4.修改滚动条样式")]),s._v(" "),a("p",[s._v("隐藏 "),a("code",[s._v("div")]),s._v(" 元素的滚动条")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("div::-webkit-scrollbar {\n    display: none;\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("div::-webkit-scrollbar")]),s._v(" 滚动条整体部分")]),s._v(" "),a("li",[a("code",[s._v("div::-webkit-scrollbar-thumb")]),s._v(" 滚动条里面的小方块，能向上向下移动（或往左往右移动，取决于是垂直滚动条还是水平滚动条")]),s._v(" "),a("li",[a("code",[s._v("div::-webkit-scrollbar-track")]),s._v(" 滚动条的轨道（里面装有 "),a("code",[s._v("Thumb")])]),s._v(" "),a("li",[a("code",[s._v("div::-webkit-scrollbar-button")]),s._v(" 滚动条的轨道的两端按钮，允许通过点击微调小方块的位置")]),s._v(" "),a("li",[a("code",[s._v("div::-webkit-scrollbar-track-piece")]),s._v(" 内层轨道，滚动条中间部分（除去")]),s._v(" "),a("li",[a("code",[s._v("div::-webkit-scrollbar-corner")]),s._v(" 边角，即两个滚动条的交汇处")]),s._v(" "),a("li",[a("code",[s._v("div::-webkit-resizer")]),s._v(" 两个滚动条的交汇处上用于通过拖动调整元素大小的小控件注意此方案有兼容性问题，一般需要隐藏滚动条时我都是用一个色块通过定位盖上去，或者将子级元素调大，父级元素使用 "),a("code",[s._v("overflow-hidden")]),s._v(" 截掉滚动条部分。暴力且直接。")])]),s._v(" "),a("h5",{attrs:{id:"_5-使用-css-写出一个三角形角标"}},[s._v("5.使用 css 写出一个三角形角标")]),s._v(" "),a("p",[s._v("元素宽高设置为 0，通过 "),a("code",[s._v("border")]),s._v(" 属性来设置，让其它三个方向的 "),a("code",[s._v("border")]),s._v(" 颜色为透明或者和背景色保持一致，剩余一条 "),a("code",[s._v("border")]),s._v(" 的颜色设置为需要的颜色。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("div {\n    width: 0;\n    height: 0;\n    border: 5px solid #transparent;\n    border-top-color: red;\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h5",{attrs:{id:"_6-解决-ios-audio-无法自动播放、循环播放的问题"}},[s._v("6.解决 ios audio 无法自动播放、循环播放的问题")]),s._v(" "),a("p",[a("code",[s._v("ios")]),s._v(" 手机在使用 "),a("code",[s._v("audio")]),s._v(" 或者 "),a("code",[s._v("video")]),s._v(" 播放的时候，个别机型无法实现自动播放，可使用下面的代码 "),a("code",[s._v("hack")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 解决ios audio无法自动播放、循环播放的问题\nvar music = document.getElementById('video');\nvar state = 0;\n\ndocument.addEventListener('touchstart', function(){\n    if(state==0){\n        music.play();\n        state=1;\n    }\n}, false);\n\ndocument.addEventListener(\"WeixinJSBridgeReady\", function () {\n    music.play();\n}, false);\n\n//循环播放\nmusic.onended = function () {\n    music.load();\n    music.play();\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("h5",{attrs:{id:"_7-水平垂直居中"}},[s._v("7.水平垂直居中")]),s._v(" "),a("p",[s._v("我一般只使用两种方式 定位 或者 "),a("code",[s._v("flex")]),s._v("，我觉得够用了。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("div {\n    width: 100px;\n    height: 100px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: auto;\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("父级控制子集居中")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(".parent {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h5",{attrs:{id:"_8-隐藏页面元素"}},[s._v("8.隐藏页面元素")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("display-none")]),s._v(": 元素不存在，从 "),a("code",[s._v("dom")]),s._v(" 中删除")]),s._v(" "),a("li",[a("code",[s._v("opacity-0")]),s._v(": 元素透明度将为 0，但元素仍然存在，绑定的事件仍旧有效仍可触发执行。")]),s._v(" "),a("li",[a("code",[s._v("visibility-hidden")]),s._v("：元素隐藏，但元素仍旧存在，页面中无法触发该元素的事件。")])]),s._v(" "),a("h5",{attrs:{id:"_9-前端工程化"}},[s._v("9.前端工程化")]),s._v(" "),a("p",[s._v("一提到前端工程化很多人想到的都是 "),a("code",[s._v("webpack")]),s._v("，这是不对的，"),a("code",[s._v("webpack")]),s._v(" 仅仅是前端工程化中的一环。在整个工程化过程中他帮我们解决了绝大多数的问题，但并没有解决所有问题。")]),s._v(" "),a("p",[s._v("前端工程化是通过工具提升效率，降低成本的一种手段。")]),s._v(" "),a("p",[s._v("近些年被广泛的关注和探讨，究其原因主要是因为现代化前端应用功能要求不断提高，业务逻辑日益复杂，作为当下互联网时代唯一不可或缺的技术，前端可以说是占据了整个开发行业的半壁江山。从传统的网站，到现在的 H5,移动 App,桌面应用，以及小程序。前端技术几乎是无所不能的全面覆盖。")]),s._v(" "),a("p",[s._v("在这些表象的背后呢，实际上是行业对开发人员的要求发生了天翻地覆的变化，以往前端写 demo，套模板，调页面这种刀耕火种的方式已经完全不符合当下对开发效率的要求，前端工程化就是在这样一个背景下被提上台面，成为前端工程师必备的手段之一。")]),s._v(" "),a("p",[s._v("一般来说前端工程包含，项目初始化，项目开发，集成，构建，打包，测试，部署等流程。工程化就是以工程的角度来解决这些问题。比如项目初始化我们一般使用"),a("code",[s._v("npm init")]),s._v(", 创建页面模板使用 plop，我们喜欢使用 ES6+开发，但是需要通过 babel 编码成 ES5，持续集成的时候我们使用 git，但是为了保持开发规范我们引入了 ESLint，部署一般使用 ci/cd 或者 jenkins 等等。")]),s._v(" "),a("p",[s._v("前端工程化是一个比较大的话题，后面我们会单开话题来讲。")]),s._v(" "),a("h5",{attrs:{id:"_10-contenteditable"}},[s._v("10.contenteditable")]),s._v(" "),a("p",[a("code",[s._v("html")]),s._v(" 中大部分标签都是不可以编辑的，但是添加了 "),a("code",[s._v("contenteditable")]),s._v(" 属性之后，标签会变成可编辑状态。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<div contenteditable="true"></div>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("不过通过这个属性把标签变为可编辑状态后只有 "),a("code",[s._v("input")]),s._v(" 事件，没有 "),a("code",[s._v("change")]),s._v(" 事件。也不能像表单一样通过 "),a("code",[s._v("maxlength")]),s._v(" 控制最大长度。我也忘记我在什么情况下用到过了，后面想起来再补吧。")]),s._v(" "),a("h5",{attrs:{id:"_11-calc"}},[s._v("11.calc")]),s._v(" "),a("p",[s._v("这是一个 "),a("code",[s._v("css")]),s._v(" 属性，我一般称之为 "),a("code",[s._v("css")]),s._v(" 表达式。可以计算 "),a("code",[s._v("css")]),s._v(" 的值。最有趣的是他可以计算不同单位的差值。很好用的一个功能，缺点是不容易阅读。接盘侠没办法一眼看出 "),a("code",[s._v("20px")]),s._v(" 是啥。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("div {\n    width: calc(25% - 20px);\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h5",{attrs:{id:"_12-proxy-和-object-defineproperty-区别"}},[s._v("12.Proxy 和 Object.defineProperty 区别")]),s._v(" "),a("p",[a("code",[s._v("Proxy")]),s._v(" 的意思是代理，我一般教他拦截器，可以拦截对象上的一个操作。用法如下，通过 "),a("code",[s._v("new")]),s._v(" 的方式创建对象，第一个参数是被拦截的对象，第二个参数是对象操作的描述。实例化后返回一个新的对象，当我们对这个新的对象进行操作时就会调用我们描述中对应的方法。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("new Proxy(target, {\n    get(target, property) {\n\n    },\n    set(target, property) {\n\n    },\n    deleteProperty(target, property) {\n\n    }\n})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[a("code",[s._v("Proxy")]),s._v(" 区别于 "),a("code",[s._v("Object.definedProperty")]),s._v("。")]),s._v(" "),a("p",[a("code",[s._v("Object.defineProperty")]),s._v(" 只能监听到属性的读写，而 "),a("code",[s._v("Proxy")]),s._v(" 除读写外还可以监听属性的删除，方法的调用等。")]),s._v(" "),a("p",[s._v("通常情况下我们想要监视数组的变化，基本要依靠重写数组方法的方式实现，这也是 Vue 的实现方式，而 "),a("code",[s._v("Proxy")]),s._v(" 可以直接监视数组的变化。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const list = [1, 2, 3];\nconst listproxy = new Proxy(list, {\n    set(target, property, value) {\n        target[property] = value;\n        return true; // 标识设置成功\n    }\n});\n\nlist.push(4);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[a("code",[s._v("Proxy")]),s._v(" 是以非入侵的方式监管了对象的读写，而 "),a("code",[s._v("defineProperty")]),s._v(" 需要按特定的方式定义对象的属性。")]),s._v(" "),a("h4",{attrs:{id:"_13-reflect"}},[s._v("13.Reflect")]),s._v(" "),a("p",[s._v("他是 "),a("code",[s._v("ES2015")]),s._v(" 新增的对象，纯静态对象也就是不能被实例画，只能通过静态方法的方式调用，和 "),a("code",[s._v("Math")]),s._v(" 对象类似，只能类似 "),a("code",[s._v("Math.random")]),s._v(" 的方式调用。")]),s._v(" "),a("p",[a("code",[s._v("Reflect")]),s._v(" 内部封装了一系列对对象的底层操作，一共 14 个，其中 1 个被废弃，还剩下 13 个。")]),s._v(" "),a("p",[a("code",[s._v("Reflect")]),s._v(" 的静态方法和 "),a("code",[s._v("Proxy")]),s._v(" 描述中的方法完全一致。也就是说 "),a("code",[s._v("Reflect")]),s._v(" 成员方法就是 "),a("code",[s._v("Proxy")]),s._v(" 处理对象的默认实现。")]),s._v(" "),a("p",[a("code",[s._v("Proxy")]),s._v(" 对象默认的方法就是调用了 "),a("code",[s._v("Reflect")]),s._v(" 内部的处理逻辑，也就是如果我们调用 "),a("code",[s._v("get")]),s._v(" 方法，那么在内部，"),a("code",[s._v("proxy")]),s._v(" 就是将 "),a("code",[s._v("get")]),s._v(" 原封不动的交给了 "),a("code",[s._v("Reflect")]),s._v("，如下。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const proxy = new Proxy(obj, {\n    get(target, property) {\n        return Reflect.get(target, property);\n    }\n})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("code",[s._v("Reflect")]),s._v(" 和 "),a("code",[s._v("Proxy")]),s._v(" 没有绝对的关系，我们一般将他们两个放在一起讲是为了方便对二者的理解。")]),s._v(" "),a("p",[s._v("那为什么会有 "),a("code",[s._v("Reflect")]),s._v(" 对象呢，其实他最大的用处就是提供了一套统一操作 "),a("code",[s._v("Object")]),s._v(" 的 "),a("code",[s._v("API")]),s._v("。判断对象是否存在某一个属性，可以使用 "),a("code",[s._v("in")]),s._v(" 操作符，但是不够优雅，还可以使用"),a("code",[s._v("Reflect.has(obj, name)")]),s._v("; 删除一个属性可以使用 "),a("code",[s._v("delete")]),s._v("，也可以使用 "),a("code",[s._v("Reflect.deleteProperty(obj, name)")]),s._v("; 获取所有属性名可以使用 "),a("code",[s._v("Object.keys")]),s._v(", 也可以使用 "),a("code",[s._v("Reflect.ownKeys(obj)")]),s._v("; 我们更推荐使用 "),a("code",[s._v("Reflect")]),s._v(" 的 "),a("code",[s._v("API")]),s._v(" 来操作对象，因为他才是未来。")]),s._v(" "),a("h4",{attrs:{id:"_14-解析-get-参数"}},[s._v("14.解析 get 参数")]),s._v(" "),a("p",[s._v("通过 "),a("code",[s._v("replace")]),s._v(" 方法获取 "),a("code",[s._v("url")]),s._v(" 中的参数键值对，可以快速解析 "),a("code",[s._v("get")]),s._v(" 参数。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const q = {};\nlocation.search.replace(/([^?&=]+)=([^&]+)/g,(_,k,v)=>q[k]=v);\nconsole.log(q);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h4",{attrs:{id:"_15-解析连接-url"}},[s._v("15.解析连接 url")]),s._v(" "),a("p",[s._v("可以通过创建 "),a("code",[s._v("a")]),s._v(" 标签，给 "),a("code",[s._v("a")]),s._v(" 标签赋值 "),a("code",[s._v("href")]),s._v(" 属性的方式，获取到协议，"),a("code",[s._v("pathname")]),s._v("，"),a("code",[s._v("origin")]),s._v(" 等 "),a("code",[s._v("location")]),s._v(" 对象上的属性。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 创建a标签\nconst aEle = document.createElement('a');\n// 给a标签赋值href路径\naEle.href = '/test.html';\n// 访问aEle中的属性\naEle.protocol; // 获取协议\naEle.pathname; // 获取path\naEle.origin;\naEle.host;\naEle.search;\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])])])}),[],!1,null,null,null);e.default=t.exports}}]);